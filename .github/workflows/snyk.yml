name: Snyk Container

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '30 22 * * 5'

jobs:
  snyk:
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        matrix:
          config:
            - {name: base-r}
            - {name: base-r-alpine}
    name: ${{ matrix.config.name }}
    steps:
    - uses: actions/checkout@v4
    - name: Log in to the Container registry ðŸ“¦
      uses: docker/login-action@v3.3.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Prepare tags
      id: docker_meta
      uses: docker/metadata-action@v5.5.1
      with:
        images: rapporteket/${{ matrix.config.name }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=schedule,pattern=weekly
          type=semver,pattern={{version}}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.6.1
    - name: Build docker image
      uses: docker/build-push-action@v6.9.0
      with:
        context: ./${{ matrix.config.name }}/.
        file: ./${{ matrix.config.name }}/Dockerfile
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Run Snyk to check Docker image for vulnerabilities
      # Snyk can be used to break the build when it detects vulnerabilities.
      # In this case we want to upload the issues to GitHub Code Scanning
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: ${{ steps.docker_meta.outputs.tags }}
        args: --file=${{ matrix.config.name }}/Dockerfile --severity-threshold=critical
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: snyk.sarif
    - name: Monitor image in Snyk UI
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        command: monitor
        image: ${{ steps.docker_meta.outputs.tags }}
        args: --file=${{ matrix.config.name }}/Dockerfile --severity-threshold=critical --org=b034af62-43be-40c7-95e8-fdc56d6f3092
    - name: Accept only vulnerability levels below critical 
      continue-on-error: false
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: ${{ steps.docker_meta.outputs.tags }}
        args: --file=${{ matrix.config.name }}/Dockerfile --severity-threshold=critical
