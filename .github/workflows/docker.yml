name: Publish Docker image
on:
  release:
    types: [published]
  push:
    branches:
        - main
  pull_request:
    branches:
        - main
  schedule:
    - cron: '0 21 * * 0' # run Sundays at 21

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      # Expose matched filters as job 'packages' output variable
      images: ${{ steps.filter.outputs.changes }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - name: Check out the repo
      uses: actions/checkout@v4.1.1
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          code-server: "code-server/**"
          rstudio: "rstudio/**"
          base-r: "base-r/**"
          dev: "dev/**"

  push_to_registries:
    needs: changes
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJSON(needs.changes.outputs.images) }}
    name: ${{ matrix.image }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4.1.1
      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: "${{ matrix.image }}/Dockerfile"
      - name: Prepare tags
        id: docker_meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: rapporteket/${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=schedule,pattern=weekly
            type=semver,pattern={{version}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v5.1.0
        with:
          context: ./${{ matrix.image }}/.
          file: ./${{ matrix.image }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
